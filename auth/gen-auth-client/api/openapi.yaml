openapi: 3.0.1
info:
  description: "API для регистрации, авторизации, выхода и верификации пользовател\
    я"
  title: Auth Service API
  version: 1.0.0
servers:
- url: http://localhost:8080/
paths:
  /auth/register:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
        description: Данные пользователя для регистрации
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
          description: Пользователь зарегистрирован
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Ошибка валидации
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Ошибка сервера
      summary: Регистрация нового пользователя
      tags:
      - auth
      x-codegen-request-body-name: body
  /auth/login:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
        description: Данные для входа
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
          description: Успешная авторизация
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Неверные учетные данные
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Ошибка сервера
      summary: Авторизация пользователя
      tags:
      - auth
      x-codegen-request-body-name: body
  /auth/logout:
    post:
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
          description: Выход успешен
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Пользователь не авторизован
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Ошибка сервера
      summary: Выход пользователя
      tags:
      - auth
  /auth/verify:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifyResponse'
          description: Токен валиден
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Токен недействителен
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Ошибка сервера
      summary: Проверка токена
      tags:
      - auth
components:
  schemas:
    RegisterRequest:
      example:
        password: password
        username: username
      properties:
        username:
          type: string
        password:
          type: string
      required:
      - password
      - username
      type: object
    LoginRequest:
      example:
        password: password
        username: username
      properties:
        username:
          type: string
        password:
          type: string
      required:
      - password
      - username
      type: object
    LoginResponse:
      example:
        token: token
      properties:
        token:
          description: JWT токен
          type: string
      type: object
    VerifyResponse:
      example:
        valid: true
        username: username
      properties:
        valid:
          description: Результат проверки токена
          type: boolean
        username:
          description: Имя пользователя
          type: string
      type: object
    SuccessResponse:
      example:
        message: message
      properties:
        message:
          type: string
      type: object
    ErrorResponse:
      example:
        error: error
      properties:
        error:
          type: string
      type: object
x-original-swagger-version: "2.0"
