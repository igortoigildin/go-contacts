package main

import (
	"context"
	"fmt"
	"log"
	"net/http"

	authclient "github.com/igortoigildin/go-contacts/gen-auth-client"
)

func main() {
	cfg := authclient.NewConfiguration()
	ctx := context.Background()
	cfg.Servers = authclient.ServerConfigurations{
		authclient.ServerConfiguration{
			URL: "http://localhost:8080",
		},
	}
	client := authclient.NewAPIClient(cfg)

	// –î–∞–Ω–Ω—ã–µ –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ (–º–æ–∂–Ω–æ –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–µ)
	registerReq := authclient.RegisterRequest{
		Username: "newuser",
		Password: "newpassword",
	}

	// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é
	resp, httpResp, err := client.AuthAPI.AuthRegisterPost(ctx).Body(registerReq).Execute()

	// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
	check("register", err, httpResp)

	// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
	check("register", err, httpResp)

	// –£—Å–ø–µ—à–Ω—ã–π –æ—Ç–≤–µ—Ç
	fmt.Println("üéâ User registered successfully:")
	fmt.Println("Response: ", resp.GetMessage())

	// --- 1. Login ---
	loginReq := authclient.LoginRequest{
		Username: "newuser",
		Password: "newpassword",
	}

	loginResp, httpResp, err := client.AuthAPI.AuthLoginPost(ctx).Body(loginReq).Execute()
	check("login", err, httpResp)

	fmt.Println("Token:", loginResp.Token)

	// // --- Verify ---
	verifyResp, httpResp, err := client.AuthAPI.AuthVerifyGet(ctx).Execute()
	check("verify", err, httpResp)

	fmt.Println(" Valid:", verifyResp.Valid)
	fmt.Println(" Username:", verifyResp.Username)
}

func check(stage string, err error, resp *http.Response) {
	if err != nil {
		if resp != nil {
			log.Fatalf("[%s] HTTP %d: %v", stage, resp.StatusCode, err)
		}
		log.Fatalf("[%s] error: %v", stage, err)
	}
}
